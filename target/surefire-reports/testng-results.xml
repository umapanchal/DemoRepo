<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Module1...I am executing test case 001]]>
    </line>
    <line>
      <![CDATA[Module1...I am executing test case 001]]>
    </line>
  </reporter-output>
  <suite started-at="2024-02-17T21:11:45 PST" name="TestSuite1 (0)" finished-at="2024-02-17T21:11:45 PST" duration-ms="2">
    <groups>
    </groups>
    <test started-at="2024-02-17T21:11:45 PST" name="Sanity" finished-at="2024-02-17T21:11:45 PST" duration-ms="2">
      <class name="testSuite1.Module1">
        <test-method signature="test001()[pri:0, instance:testSuite1.Module1@7c0c77c7]" started-at="2024-02-17T21:11:45 PST" name="test001" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at testSuite1.Module1.test001(Module1.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Module1...I am executing test case 001]]>
            </line>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testSuite1.Module1@7c0c77c7]" started-at="2024-02-17T21:11:45 PST" name="beforeMethod" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testSuite1.Module1@7c0c77c7]" started-at="2024-02-17T21:11:45 PST" name="afterMethod" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testSuite1.Module1 -->
      <class name="testSuite1.Module2">
        <test-method signature="test001()[pri:0, instance:testSuite1.Module2@7adda9cc]" started-at="2024-02-17T21:11:45 PST" name="test001" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test003()[pri:0, instance:testSuite1.Module2@7adda9cc]" started-at="2024-02-17T21:11:45 PST" name="test003" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
      </class> <!-- testSuite1.Module2 -->
    </test> <!-- Sanity -->
  </suite> <!-- TestSuite1 (0) -->
  <suite started-at="2024-02-17T21:11:45 PST" name="TestSuite1" finished-at="2024-02-17T21:11:45 PST" duration-ms="24">
    <groups>
    </groups>
    <test started-at="2024-02-17T21:11:45 PST" name="Sanity" finished-at="2024-02-17T21:11:45 PST" duration-ms="24">
      <class name="testSuite1.Module1">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testSuite1.Module1@7995092a]" started-at="2024-02-17T21:11:45 PST" name="beforeMethod" finished-at="2024-02-17T21:11:45 PST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test001()[pri:0, instance:testSuite1.Module1@7995092a]" started-at="2024-02-17T21:11:45 PST" name="test001" finished-at="2024-02-17T21:11:45 PST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at testSuite1.Module1.test001(Module1.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Module1...I am executing test case 001]]>
            </line>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testSuite1.Module1@7995092a]" started-at="2024-02-17T21:11:45 PST" name="afterMethod" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testSuite1.Module1 -->
      <class name="testSuite1.Module2">
        <test-method signature="test001()[pri:0, instance:testSuite1.Module2@45b9a632]" started-at="2024-02-17T21:11:45 PST" name="test001" finished-at="2024-02-17T21:11:45 PST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test001 -->
        <test-method signature="test003()[pri:0, instance:testSuite1.Module2@45b9a632]" started-at="2024-02-17T21:11:45 PST" name="test003" finished-at="2024-02-17T21:11:45 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test003 -->
      </class> <!-- testSuite1.Module2 -->
    </test> <!-- Sanity -->
  </suite> <!-- TestSuite1 -->
</testng-results>
